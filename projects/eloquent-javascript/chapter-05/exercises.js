// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten() {

}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop() {

}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every() {

}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
//   //debugger;
//   //split string into array
// let charArr = string.split("");
// //look all characters of the array
// let scripts = charArr.map(function(char){
//   //return script that char belongs to
//   // console.log(textScripts(char));
// });
// textScripts(string).replace(/\W/, "").split(" ");

let charArr = string.split("");
let scripts = countBy(string,function(char){
  let script = characterScript(char.codePointAt(0));
  return script ? script.direction : "none";
});
scripts.sort(function(a, b){
  return b.count - a.count;
});
return scripts[0].name;
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
